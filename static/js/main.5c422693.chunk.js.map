{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","email","name","className","href","CommentInfo","comment","body","CommentList","PostInfo","post","title","PostList","posts","map","id","postsFromServer","userId","usersFromServer","find","commentsFromServer","postId","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAD,QAEpBC,KAAQC,EAFY,EAEZA,MAAOC,EAFK,EAELA,KAFK,OAKtB,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,QCXMG,EAAc,SAAC,GAAD,QAEvBC,QACEJ,EAHqB,EAGrBA,KAAMD,EAHe,EAGfA,MAAOM,EAHQ,EAGRA,KAHQ,OAOzB,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,IAEtC,OAED,mBACEC,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGI,QClBMC,G,MAAc,SAAC,GAAD,IAAGF,EAAH,EAAGA,QAAH,OACzB,qBAAKH,UAAU,cAAf,SACE,cAAC,EAAD,CAAaG,QAASA,QCDbG,G,MAAW,SAAC,GAAD,QAEpBC,KACEC,EAHkB,EAGlBA,MAAOX,EAHW,EAGXA,KAAMM,EAHK,EAGLA,QAASC,EAHJ,EAGIA,KAHJ,OAOtB,sBAAKJ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCQ,IAEhCX,GAAQ,cAAC,EAAD,CAAUA,KAAMA,OAG3B,mBAAGG,UAAU,iBAAb,SACGI,IAGFD,EACC,cAAC,EAAD,CAAaA,QAASA,IAGpB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,qCC3BGM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKV,UAAU,WAAf,SACGU,EAAMC,KAAI,SAAAJ,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKK,UCkB/B,IAAMF,EAAQG,EAAgBF,KAAI,SAAAJ,GAAI,kCACxCA,GADwC,IAE3CV,MAlBeiB,EAkBDP,EAAKO,OAjBDC,EAAgBC,MAChC,SAAAnB,GAAI,OAAIA,EAAKe,KAAOE,MAGF,MAcpBX,SAXkBS,EAWEL,EAAKK,GAVJK,EAAmBD,MACtC,SAAAb,GAAO,OAAIA,EAAQe,SAAWN,MAGT,QALzB,IAAoBA,EARHE,KAsBJK,EAAM,kBACjB,0BAASnB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUU,MAAOA,QC7BrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c422693.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = (\n  {\n    user: { email, name },\n  },\n) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n);\n","export const CommentInfo = (\n  {\n    comment: {\n      name, email, body,\n    },\n  },\n) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nimport './CommentList.scss';\n\nexport const CommentList = ({ comment }) => (\n  <div className=\"CommentList\">\n    <CommentInfo comment={comment} />\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nimport './PostInfo.scss';\n\nexport const PostInfo = (\n  {\n    post: {\n      title, user, comment, body,\n    },\n  },\n) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      {user && <UserInfo user={user} />}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comment ? (\n      <CommentList comment={comment} />\n    )\n      : (\n        <>\n          <hr />\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUser(userId) {\n  const foundUser = usersFromServer.find(\n    user => user.id === userId,\n  );\n\n  return foundUser || null;\n}\n\nfunction getComment(id) {\n  const foundComment = commentsFromServer.find(\n    comment => comment.postId === id,\n  );\n\n  return foundComment || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comment: getComment(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
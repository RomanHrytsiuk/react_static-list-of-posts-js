{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","email","name","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAD,QAEpBC,KAAQC,EAFY,EAEZA,MAAOC,EAFK,EAELA,KAFK,OAKtB,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,QCXMG,EAAc,SAAC,GAAD,QAEvBC,QACEJ,EAHqB,EAGrBA,KAAMD,EAHe,EAGfA,MAAOM,EAHQ,EAGRA,KAHQ,OAOzB,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,IAEtC,OAED,mBACEC,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGI,QClBMC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,8BACGA,EAASC,KAAI,SAAAJ,GAAO,OACnB,qBAAKH,UAAU,cAAf,SACE,cAAC,EAAD,CAAaG,QAASA,GAAcA,EAAQK,aCHvCC,G,MAAW,SAAC,GAAD,QAEpBC,KACEC,EAHkB,EAGlBA,MAAOd,EAHW,EAGXA,KAAMS,EAHK,EAGLA,SAAUF,EAHL,EAGKA,KAHL,OAOtB,sBAAKJ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEhCd,GAAQ,cAAC,EAAD,CAAUA,KAAMA,OAG3B,mBAAGG,UAAU,iBAAb,SACGI,IAGH,uBAECE,EAASM,OAAS,EACd,cAAC,EAAD,CAAaN,SAAUA,IAExB,mBAAG,UAAQ,oBAAX,kCC1BKO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCkB/B,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MAlBemB,EAkBDN,EAAKM,OAjBDC,EAAgBC,MAChC,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MAGF,MAcpBV,UAXkBE,EAWGE,EAAKF,GAVLW,EAAmBC,QACtC,SAAAjB,GAAO,OAAIA,EAAQkB,SAAWb,MAGT,QALzB,IAAoBA,EARHQ,KAsBJM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QC7BrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.effec806.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = (\n  {\n    user: { email, name },\n  },\n) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n);\n","export const CommentInfo = (\n  {\n    comment: {\n      name, email, body,\n    },\n  },\n) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div>\n    {comments.map(comment => (\n      <div className=\"CommentList\">\n        <CommentInfo comment={comment} key={comment.id} />\n      </div>\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nimport './PostInfo.scss';\n\nexport const PostInfo = (\n  {\n    post: {\n      title, user, comments, body,\n    },\n  },\n) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      {user && <UserInfo user={user} />}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    {comments.length > 0\n      ? (<CommentList comments={comments} />)\n      : (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUser(userId) {\n  const foundUser = usersFromServer.find(\n    user => user.id === userId,\n  );\n\n  return foundUser || null;\n}\n\nfunction getComment(id) {\n  const foundComment = commentsFromServer.filter(\n    comment => comment.postId === id,\n  );\n\n  return foundComment || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComment(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}